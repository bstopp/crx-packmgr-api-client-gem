=begin
#CRX Package Manager API

#API for interacting with the CRX Package Manager in AEM.

OpenAPI spec version: 1.0.0
Contact: bryan.stopp@gmail.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for CrxPackageManager::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = CrxPackageManager::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instact of DefaultApi' do
      expect(@instance).to be_instance_of(CrxPackageManager::DefaultApi)
    end
  end

  # unit tests for download
  # Download a package
  # Downloads the package at the specified path. Returns a Tempfile object.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :path The path to the package to download.
  # @return [File]
  describe 'download test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for groups
  # List package groups
  # Returns a list of all package groups available.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :compress_version Compress versions; count all versions of the same packages as a single entry.
  # @option opts [BOOLEAN] :include_all Return a total count of all packages. Default to false.
  # @option opts [BOOLEAN] :include_root Include the root package. Defaults to false.
  # @option opts [BOOLEAN] :include_my_packages Include the &#39;my_packages&#39; group. Only applicable if the group has no packages. Default to false.
  # @option opts [BOOLEAN] :only_top_level Only list top-level groups, ie. do not list all nested groups.
  # @return [GroupList]
  describe 'groups test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for init
  # Metadata
  # Display metadata about this package manager.
  # @param [Hash] opts the optional parameters
  # @return [InitData]
  describe 'init test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for installstatus
  # Package Installation Status
  # Returns a status of the installation of OSGi packages.
  # @param [Hash] opts the optional parameters
  # @return [InstallStatus]
  describe 'installstatus test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # List packages
  # Returns a list of all available packages defined.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q Term to search within package names.
  # @option opts [BOOLEAN] :include_versions Include versions of package in results.
  # @option opts [String] :path The path to a specific package definition.
  # @return [PackageList]
  describe 'list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for screenshot
  # Get screenshot
  # Returns the screenshot at the specified path.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :path The path to the screenshot.
  # @return [File]
  describe 'screenshot test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_get
  # Generic operation service.
  # Provides endpoint for executing package manipulation commands.
  # @param cmd The command to execute.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name The name of the package on which to execute the command.
  # @option opts [String] :group The group of the package on which to execute the command.
  # @option opts [BOOLEAN] :strict Fail on an error.
  # @return [String]
  describe 'service_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_post
  # Generic operation service.
  # Provides endpoint for
  # @param file Package file to upload
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name The name of the package on installation.
  # @option opts [BOOLEAN] :strict Fail on an error.
  # @option opts [BOOLEAN] :force Force the package upload.
  # @option opts [BOOLEAN] :install Install the package upon upload
  # @return [String]
  describe 'service_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for thumbnail
  # Get package thumbnail
  # Returns the package&#39;s thumbnail image.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :path The path to the package.
  # @return [File]
  describe 'thumbnail test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Update a package
  # Updates a package definition. Returns an UpdateStatus definition, but must be manually parsed due to MIME type incompatibilities. Note that if the name, group or version changes, this changes the path to the package for the next update or listing.
  # @param path The path to the package which needs updating.
  # @param package_name The package&#39;s name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :group_name The package&#39;s group.
  # @option opts [String] :version The version for the package.
  # @option opts [String] :description The description for the package.
  # @option opts [File] :thumbnail The thumbnail for the package.
  # @option opts [String] :filter The filters for the package. The structure is specified in FilterData definition.
  # @option opts [String] :tested_with Product name and version this package is targeted for or is compatible with. eg: CQ 5.3
  # @option opts [String] :fixed_bugs List of fixed bugs or issues.
  # @option opts [Array<String>] :dependencies Packages on which this one depends.
  # @option opts [Array<String>] :replaces List of packages this one replaces.
  # @option opts [String] :provider_name Name of the provider. eg: Adobe Systems Incorporated
  # @option opts [String] :provider_url URL of the provider. eg: http://www.adobe.com
  # @option opts [String] :provider_link Package specific link to a provider page. eg: http://www.adobe.com/mypackage.html
  # @option opts [BOOLEAN] :requires_root Specifies if this package requires root to install.
  # @option opts [BOOLEAN] :requires_restart Specifies if this package requires a restart upon installation.
  # @option opts [String] :ac_handling How to handle ACL rules when installing the package.
  # @option opts [File] :screenshot Screen shot images for this package
  # @option opts [String] :screenshot_config Configuration details for existing screenshots. The structure is specified in ScreenshotConfig definition.
  # @return [String]
  describe 'update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
